import { DefineComponent, ShallowRef, ComponentOptionsMixin, PublicProps, ExtractPropTypes, PropType } from 'vue';
import { MapBrowserEvent } from 'ol';
import { default as Pointer, Options } from 'ol/interaction/Pointer';

declare const _default: __VLS_WithTemplateSlots< DefineComponent<__VLS_TypePropsToRuntimeProps<Omit<Options, "handleDownEvent" | "handleDragEvent" | "handleMoveEvent" | "handleUpEvent">>, {
    pointer: ShallowRef<Pointer>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    down: (data: MapBrowserEvent<any>) => void;
    move: (data: MapBrowserEvent<any>) => void;
    up: (data: MapBrowserEvent<any>) => void;
    drag: (data: MapBrowserEvent<any>) => void;
}, string, PublicProps, Readonly< ExtractPropTypes<__VLS_TypePropsToRuntimeProps<Omit<Options, "handleDownEvent" | "handleDragEvent" | "handleMoveEvent" | "handleUpEvent">>>> & {
    onDrag?: ((data: MapBrowserEvent<any>) => any) | undefined;
    onDown?: ((data: MapBrowserEvent<any>) => any) | undefined;
    onMove?: ((data: MapBrowserEvent<any>) => any) | undefined;
    onUp?: ((data: MapBrowserEvent<any>) => any) | undefined;
}, {}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
