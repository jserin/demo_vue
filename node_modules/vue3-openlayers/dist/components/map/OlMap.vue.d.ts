import { default as __DTS_DEFAULT_0__ } from 'ol/renderer/Layer';
import { DefineComponent, Ref, ComponentOptionsMixin, PublicProps, ExtractPropTypes, PropType } from 'vue';
import { Coordinate } from 'ol/coordinate';
import { Source } from 'ol/source';
import { Pixel } from 'ol/pixel';
import { Layer } from 'ol/layer';
import { SimpleGeometry } from 'ol/geom';
import { FeatureLike } from 'ol/Feature';
import { AtPixelOptions, default as Map, MapOptions } from 'ol/Map';

declare const _default: __VLS_WithTemplateSlots< DefineComponent<__VLS_TypePropsToRuntimeProps<MapOptions>, {
    map: Map;
    mapRef: Ref<string | HTMLElement | undefined>;
    forEachFeatureAtPixel: (pixel: Pixel, callback: (arg0: FeatureLike, arg1: Layer<Source, __DTS_DEFAULT_0__<any>>, arg2: SimpleGeometry) => unknown, options?: AtPixelOptions | undefined) => unknown;
    getCoordinateFromPixel: (pixel: Coordinate) => Coordinate | undefined;
    render: () => void | undefined;
    updateSize: () => void | undefined;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    postrender: (...args: any[]) => void;
    "change:layerGroup": (...args: any[]) => void;
    "change:size": (...args: any[]) => void;
    "change:target": (...args: any[]) => void;
    "change:view": (...args: any[]) => void;
    click: (...args: any[]) => void;
    dblclick: (...args: any[]) => void;
    singleclick: (...args: any[]) => void;
    pointerdrag: (...args: any[]) => void;
    pointermove: (...args: any[]) => void;
    movestart: (...args: any[]) => void;
    moveend: (...args: any[]) => void;
    precompose: (...args: any[]) => void;
    postcompose: (...args: any[]) => void;
    rendercomplete: (...args: any[]) => void;
}, string, PublicProps, Readonly< ExtractPropTypes<__VLS_TypePropsToRuntimeProps<MapOptions>>> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onDblclick?: ((...args: any[]) => any) | undefined;
    onPointermove?: ((...args: any[]) => any) | undefined;
    onPostrender?: ((...args: any[]) => any) | undefined;
    "onChange:layerGroup"?: ((...args: any[]) => any) | undefined;
    "onChange:size"?: ((...args: any[]) => any) | undefined;
    "onChange:target"?: ((...args: any[]) => any) | undefined;
    "onChange:view"?: ((...args: any[]) => any) | undefined;
    onSingleclick?: ((...args: any[]) => any) | undefined;
    onPointerdrag?: ((...args: any[]) => any) | undefined;
    onMovestart?: ((...args: any[]) => any) | undefined;
    onMoveend?: ((...args: any[]) => any) | undefined;
    onPrecompose?: ((...args: any[]) => any) | undefined;
    onPostcompose?: ((...args: any[]) => any) | undefined;
    onRendercomplete?: ((...args: any[]) => any) | undefined;
}, {}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
