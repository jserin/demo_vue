import { DefineComponent, ComponentOptionsMixin, PublicProps, ExtractPropTypes, PropType } from 'vue';
import { Options, IconOrigin, IconAnchorUnits } from 'ol/style/Icon';

declare const _default: __VLS_WithTemplateSlots< DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Options>, {
    anchorOrigin: string;
    anchorXUnits: string;
    offset: () => number[];
    displacement: () => number[];
    offsetOrigin: string;
    opacity: number;
    rotateWithView: boolean;
    rotation: number;
}>, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly< ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Options>, {
    anchorOrigin: string;
    anchorXUnits: string;
    offset: () => number[];
    displacement: () => number[];
    offsetOrigin: string;
    opacity: number;
    rotateWithView: boolean;
    rotation: number;
}>>>, {
    rotation: number;
    opacity: number;
    offset: number[];
    rotateWithView: boolean;
    displacement: number[];
    anchorOrigin: IconOrigin;
    anchorXUnits: IconAnchorUnits;
    offsetOrigin: IconOrigin;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
