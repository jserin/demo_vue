import { FeatureAnimation } from './AnimationTypes';
import { easeOut } from 'ol/easing';
import { DefineComponent, ComputedRef, ComponentOptionsMixin, PublicProps, ExtractPropTypes, PropType } from 'vue';
import { LineString } from 'ol/geom';
import { AnimationCommonProps } from './AnimationCommonProps';

declare const _default: __VLS_WithTemplateSlots< DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<AnimationCommonProps & {
    rotate?: boolean | undefined;
    speed?: number | undefined;
    path: LineString;
}>, {
    rotate: boolean;
    speed: number;
    duration: number;
    revers: boolean;
    repeat: number;
    easing: easeOut;
}>, {
    map: unknown;
    vectorLayer: unknown;
    animation: ComputedRef<FeatureAnimation>;
    properties: {
        speed?: unknown;
        duration?: unknown;
        side?: unknown;
        revers?: unknown;
        repeat?: unknown;
        hiddenStyle?: unknown;
        horizontal?: unknown;
        fade?: unknown;
        easing?: unknown;
    };
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly< ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<AnimationCommonProps & {
    rotate?: boolean | undefined;
    speed?: number | undefined;
    path: LineString;
}>, {
    rotate: boolean;
    speed: number;
    duration: number;
    revers: boolean;
    repeat: number;
    easing: easeOut;
}>>>, {
    speed: number;
    duration: number;
    revers: boolean;
    repeat: number;
    easing: (t: number) => number;
    rotate: boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
